# see how to check TLS/SSL ciphers for FTP/TLS
# ref - 
# https://en.wikipedia.org/wiki/FTPS
# https://www.securityevaluators.com/using-openssl-determine-ciphers-enabled-server/
# below in the code, 
# v is the protocol
# c is the ciphers list in your openssl lib
# cloudshell:~ (salt-225402)$ openssl ciphers 'ALL:eNULL' | tr ':' ' '
# e.g. ECDHE-ECDSA-AES256-GCM-SHA384 ECDHE-RSA-AES256-GCM-SHA384 DHE-DSS-AES256-GCM-SHA384 DHE-RSA-AES256-GCM-SHA384 ECDHE-ECDSA-CHACHA20-POLY1305 ECDHE-RSA-CHACHA20-POLY1305 DHE-RSA-CHACHA20-POLY1305 ECDHE-ECDSA-AES256-CCM8 ECDHE-ECDSA-AES256-CCM DHE-RSA-AES256-CCM8 DHE-RSA-AES256-CCM ADH-AES256-GCM-SHA384 ECDHE-ECDSA-AES128-GCM-SHA256 ECDHE-RSA-AES128-GCM-SHA256 DHE-DSS-AES128-GCM-SHA256 DHE-RSA-AES128-GCM-SHA256 ECDHE-ECDSA-AES128-CCM8 ECDHE-ECDSA-AES128-CCM DHE-RSA-AES128-CCM8 DHE-RSA-AES128-CCM ADH-AES128-GCM-SHA256 ECDHE-ECDSA-AES256-SHA384 ECDHE-RSA-AES256-SHA384 DHE-RSA-AES256-SHA256 DHE-DSS-AES256-SHA256 ECDHE-ECDSA-CAMELLIA256-SHA384 ECDHE-RSA-CAMELLIA256-SHA384 DHE-RSA-CAMELLIA256-SHA256 DHE-DSS-CAMELLIA256-SHA256 ADH-AES256-SHA256 ADH-CAMELLIA256-SHA256 ECDHE-ECDSA-AES128-SHA256 ECDHE-RSA-AES128-SHA256 DHE-RSA-AES128-SHA256 DHE-DSS-AES128-SHA256 ECDHE-ECDSA-CAMELLIA128-SHA256 ECDHE-RSA-CAMELLIA128-SHA256 DHE-RSA-CAMELLIA128-SHA256 DHE-DSS-CAMELLIA128-SHA256 ADH-AES128-SHA256 ADH-CAMELLIA128-SHA256 ECDHE-ECDSA-AES256-SHA ECDHE-RSA-AES256-SHA DHE-RSA-AES256-SHA DHE-DSS-AES256-SHA DHE-RSA-CAMELLIA256-SHA DHE-DSS-CAMELLIA256-SHA AECDH-AES256-SHA ADH-AES256-SHA ADH-CAMELLIA256-SHA ECDHE-ECDSA-AES128-SHA ECDHE-RSA-AES128-SHA DHE-RSA-AES128-SHA DHE-DSS-AES128-SHA DHE-RSA-SEED-SHA DHE-DSS-SEED-SHA DHE-RSA-CAMELLIA128-SHA DHE-DSS-CAMELLIA128-SHA AECDH-AES128-SHA ADH-AES128-SHA ADH-SEED-SHA ADH-CAMELLIA128-SHA RSA-PSK-AES256-GCM-SHA384 DHE-PSK-AES256-GCM-SHA384 RSA-PSK-CHACHA20-POLY1305 DHE-PSK-CHACHA20-POLY1305 ECDHE-PSK-CHACHA20-POLY1305 DHE-PSK-AES256-CCM8 DHE-PSK-AES256-CCM AES256-GCM-SHA384 AES256-CCM8 AES256-CCM PSK-AES256-GCM-SHA384 PSK-CHACHA20-POLY1305 PSK-AES256-CCM8 PSK-AES256-CCM RSA-PSK-AES128-GCM-SHA256 DHE-PSK-AES128-GCM-SHA256 DHE-PSK-AES128-CCM8 DHE-PSK-AES128-CCM AES128-GCM-SHA256 AES128-CCM8 AES128-CCM PSK-AES128-GCM-SHA256 PSK-AES128-CCM8 PSK-AES128-CCM AES256-SHA256 CAMELLIA256-SHA256 AES128-SHA256 CAMELLIA128-SHA256 ECDHE-PSK-AES256-CBC-SHA384 ECDHE-PSK-AES256-CBC-SHA SRP-DSS-AES-256-CBC-SHA SRP-RSA-AES-256-CBC-SHA SRP-AES-256-CBC-SHA RSA-PSK-AES256-CBC-SHA384 DHE-PSK-AES256-CBC-SHA384 RSA-PSK-AES256-CBC-SHA DHE-PSK-AES256-CBC-SHA ECDHE-PSK-CAMELLIA256-SHA384 RSA-PSK-CAMELLIA256-SHA384 DHE-PSK-CAMELLIA256-SHA384 AES256-SHA CAMELLIA256-SHA PSK-AES256-CBC-SHA384 PSK-AES256-CBC-SHA PSK-CAMELLIA256-SHA384 ECDHE-PSK-AES128-CBC-SHA256 ECDHE-PSK-AES128-CBC-SHA SRP-DSS-AES-128-CBC-SHA SRP-RSA-AES-128-CBC-SHA SRP-AES-128-CBC-SHA RSA-PSK-AES128-CBC-SHA256 DHE-PSK-AES128-CBC-SHA256 RSA-PSK-AES128-CBC-SHA DHE-PSK-AES128-CBC-SHA ECDHE-PSK-CAMELLIA128-SHA256 RSA-PSK-CAMELLIA128-SHA256 DHE-PSK-CAMELLIA128-SHA256 AES128-SHA SEED-SHA CAMELLIA128-SHA PSK-AES128-CBC-SHA256 PSK-AES128-CBC-SHA PSK-CAMELLIA128-SHA256 ECDHE-ECDSA-NULL-SHA ECDHE-RSA-NULL-SHA AECDH-NULL-SHA NULL-SHA256 ECDHE-PSK-NULL-SHA384 ECDHE-PSK-NULL-SHA256 ECDHE-PSK-NULL-SHA RSA-PSK-NULL-SHA384 RSA-PSK-NULL-SHA256 DHE-PSK-NULL-SHA384 DHE-PSK-NULL-SHA256 RSA-PSK-NULL-SHA DHE-PSK-NULL-SHA NULL-SHA NULL-MD5 PSK-NULL-SHA384 PSK-NULL-SHA256 PSK-NULL-SHA

#!/bin/bash
for v in ssl2 ssl3 tls1 tls1_1 tls1_2; do
 for c in $(openssl ciphers 'ALL:eNULL' | tr ':' ' '); do
 openssl s_client -connect ftp.abc.com:21 -starttls ftp \
 -cipher $c -$v < /dev/null > /dev/null 2>&1 && echo -e "$v:\t$c"
 done
done

===============================================================================

manually you can run it like below,

cloudshell:~ (salt-225402)$ openssl s_client -connect ftp.abc.com:21 -starttls ftp (optional: -cipher <AES256-GCM-SHA384> -<tls1_2>)
CONNECTED(00000003)
... SSL server certificate details...

Client Certificate Types: RSA fixed DH, DSS fixed DH, RSA sign, DSA sign, ECDSA sign
Requested Signature Algorithms: RSA+SHA512:DSA+SHA512:ECDSA+SHA512:RSA+SHA384:DSA+SHA384:ECDSA+SHA384:RSA+SHA256:DSA+SHA256:ECDSA+SHA256:RSA+SHA224:DSA+SHA224:ECDSA+SHA224:RSA+SHA1:DSA+SHA1:ECDSA+SHA1
Shared Requested Signature Algorithms: RSA+SHA512:DSA+SHA512:ECDSA+SHA512:RSA+SHA384:DSA+SHA384:ECDSA+SHA384:RSA+SHA256:DSA+SHA256:ECDSA+SHA256:RSA+SHA224:DSA+SHA224:ECDSA+SHA224:RSA+SHA1:DSA+SHA1:ECDSA+SHA1
Peer signing digest: SHA512
Server Temp Key: DH, 1024 bits
---
SSL handshake has read 3058 bytes and written 388 bytes
Verification error: unable to verify the first certificate
---
New, TLSv1.2, Cipher is DHE-RSA-AES256-GCM-SHA384 *** see this !! 
Server public key is 2048 bit
Secure Renegotiation IS supported
Compression: NONE
Expansion: NONE
No ALPN negotiated
SSL-Session:
    Protocol  : TLSv1.2
    Cipher    : DHE-RSA-AES256-GCM-SHA384 *** a;so here !!
    Session-ID: 7D54D3B6D9DB81A...ECE85AEDBAF2F6988748
    Session-ID-ctx:
    Master-Key: A2FF97C8FABEE...94BF6DF3B240C271B79D2CAD0
    PSK identity: None
    PSK identity hint: None
    SRP username: None
    TLS session ticket lifetime hint: 300 (seconds)
    ...
        Start Time: 1544771600
    Timeout   : 7200 (sec)
    Verify return code: 21 (unable to verify the first certificate)
    Extended master secret: no
---
220 ABC FTP Server
USER xxxxxxxxxxxxxxxxx
331 Password required for xxxxxxxxxxxx
PASS xxxxxxxxxxxxxxxxx
230 User xxxxxxxxxxxxxxxx logged in.
PWD
257 "/" is current directory.

CWD /xxxxxxxx
250 CWD command successful.
PWD
257 "/xxxxxxxxx" is current directory.
SITE az2z
200 Az2z flag is set for your next upload
...
...
